% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count-enzyme-steps.R
\name{count_enzyme_steps}
\alias{count_enzyme_steps}
\title{Count Enzyme Steps}
\usage{
count_enzyme_steps(glycans, enzyme)
}
\arguments{
\item{glycans}{A \code{\link[glyrepr:glycan_structure]{glyrepr::glycan_structure()}}, or a character vector of
glycan structure strings supported by \code{\link[glyparse:auto_parse]{glyparse::auto_parse()}}.}

\item{enzyme}{An \code{\link[=enzyme]{enzyme()}} or a gene symbol.}
}
\value{
An integer vector of the same length as \code{glycans}.
}
\description{
Count how many times an enzyme is involved in the biosynthesis of a glycan.
}
\section{Important notes}{
\subsection{Inclusiveness}{

The algorithm takes an intentionally inclusive approach,
assuming that all possible isoenzymes capable of catalyzing
a given reaction may be involved.
Therefore, results should be interpreted with caution.

For example, in humans, detection of the motif "Neu5Ac(a2-3)Gal(b1-" will return
both "ST3GAL3" and "ST3GAL4". In reality, only one of them might be active, depending
on factors such as tissue specificity.
}

\subsection{Only "concrete" glycans}{

The function only works for glycans containing \strong{concrete} residues
(e.g., \code{"Glc"}, \code{"GalNAc"}), and not for glycans with \strong{generic}
residues (e.g., \code{"Hex"}, \code{"HexNAc"}).
}

\subsection{Incomplete glycan structures}{

If the glycan structure is incomplete or partially degraded,
the result may be misleading.
}
}

\examples{
library(glyrepr)
library(glyparse)

# Use `glycan_structure()` and `enzyme()`
glycan <- auto_parse("Neu5Ac(a2-6)Gal(b1-4)GlcNAc(b1-")
count_enzyme_steps(glycan, enzyme("ST6GAL1"))

# Or use characters directly
count_enzyme_steps("Neu5Ac(a2-6)Gal(b1-4)GlcNAc(b1-", "ST6GAL1")

# Vectorized input
glycans <- c(
  "Neu5Ac(a2-6)Gal(b1-4)GlcNAc(b1-",
  "Gal(b1-4)GlcNAc(b1-"
)
count_enzyme_steps(glycans, "ST6GAL1")

}
