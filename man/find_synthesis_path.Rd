% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find-synthesis-path.R
\name{find_synthesis_path}
\alias{find_synthesis_path}
\title{Find Synthesis Path Between Glycan Structures}
\usage{
find_synthesis_path(
  from,
  to,
  enzymes = NULL,
  max_steps = 10,
  filter = NULL,
  return = c("shortest", "all")
)
}
\arguments{
\item{from}{A \code{\link[glyrepr:glycan_structure]{glyrepr::glycan_structure()}} scalar, or a character string
supported by \code{\link[glyparse:auto_parse]{glyparse::auto_parse()}}. The starting glycan structure.}

\item{to}{A \code{\link[glyrepr:glycan_structure]{glyrepr::glycan_structure()}} scalar, or a character string
supported by \code{\link[glyparse:auto_parse]{glyparse::auto_parse()}}. The target glycan structure.}

\item{enzymes}{A character vector of gene symbols, or a list of \code{\link[=enzyme]{enzyme()}} objects.
If \code{NULL} (default), all available enzymes will be used.}

\item{max_steps}{Integer, maximum number of enzymatic steps to search.
Default is 10.}

\item{filter}{Optional function to filter generated glycans at each step.
Should take a \code{\link[glyrepr:glycan_structure]{glyrepr::glycan_structure()}} vector as input and return
a logical vector of the same length.}

\item{return}{One of \code{"shortest"} or \code{"all"}. If \code{"shortest"}, returns the
first shortest path found. If \code{"all"}, returns a graph containing all
possible paths within \code{max_steps}.}
}
\value{
An \code{\link[igraph:aaa-igraph-package]{igraph::igraph()}} object representing the synthesis path(s).
Vertices represent glycan structures with \code{name} attribute containing
IUPAC-condensed strings. Edges represent enzymatic reactions with
\code{enzyme} attribute containing gene symbols and \code{step} attribute
indicating the step number.
}
\description{
Find a synthesis path from one glycan structure to another using enzymatic reactions.
This function uses breadth-first search to find the shortest path or all possible paths
within a given number of steps.
}
\examples{
library(glyrepr)
library(glyparse)

# Find shortest path
from <- "Gal(b1-4)GlcNAc(b1-"
to <- "Neu5Ac(a2-6)Gal(b1-4)GlcNAc(b1-"
path <- find_synthesis_path(from, to, enzymes = "ST6GAL1", max_steps = 3)

# View the path
igraph::as_data_frame(path, what = "edges")

}
